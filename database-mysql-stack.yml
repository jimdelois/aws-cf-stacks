AWSTemplateFormatVersion: '2010-09-09'
Description: "Manages Generic, Shared Database"

Parameters:
  SelectedVPC:
    Description: "The VPC in which to install the Database"
    Type: "AWS::EC2::VPC::Id"
  DatabaseSnapshotName:
    Type: "String"
    Default: ""
  GenericSharedClusterSecurityGroupId:
    Type: "String"
    Default: ""

Conditions:
  UseDatabaseSnapshot: !Not [ !Equals [ !Ref DatabaseSnapshotName, "" ] ]
  AttachSharedEKSClusterIngress: !Not [ !Equals [ !Ref GenericSharedClusterSecurityGroupId, "" ] ]

Resources:

  ###########################################################
  #                                                         #
  #   SECURITY GROUPS                                       #
  #                                                         #
  ###########################################################

  DatabaseSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: "Shared MySQL RDS"
      GroupDescription: !Sub "Security Group for Shared MySQL RDS (${SelectedVPC})"
      VpcId: !Ref SelectedVPC

  GenericSharedClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: AttachSharedEKSClusterIngress
    Properties:
      GroupId: !GetAtt DatabaseSecurityGroup.GroupId
      SourceSecurityGroupId: !Ref GenericSharedClusterSecurityGroupId
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306

  ###########################################################
  #                                                         #
  #   RDS DATABASES                                         #
  #                                                         #
  ###########################################################
  # Note: See https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html

  DatabaseSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Description: "This is a Secrets Manager secret for an RDS DB instance"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "root"}'
        GenerateStringKey: "password"
        PasswordLength: 32
        ExcludeCharacters: '"@/\'

  Database:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: "Snapshot"
    Properties:
      AllocatedStorage: "20"
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: "2"
      DBInstanceClass: "db.t2.micro"
      DBSnapshotIdentifier:
        Fn::If:
        - UseDatabaseSnapshot
        - !Ref DatabaseSnapshotName
        - !Ref AWS::NoValue
      Engine: "mysql"
      EngineVersion: "8.0.20"
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref DatabaseSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref DatabaseSecret, ':SecretString:password}}' ]]
      PubliclyAccessible: true
      # For Read replicas in the future! See docs for more info
      # SourceDBInstanceIdentifier: String
      VPCSecurityGroups:
        - !ImportValue PersonalMySQLIngress
        - !Ref DatabaseSecurityGroup

  SecretAttachment:
    Type: "AWS::SecretsManager::SecretTargetAttachment"
    Properties:
      SecretId: !Ref DatabaseSecret
      TargetId: !Ref Database
      TargetType: AWS::RDS::DBInstance

Outputs:
  DatabaseSecurityGroup:
    Description: SG to be assigned to any clusters needing access
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: SharedMySQLDatabaseSecurityGroup
  Database:
    Description: A Generic Shared MySQL Database
    Value: !Ref Database
    Export:
      Name: SharedMySQLDatabase
  DatabaseDNSAddress:
    Description: The DNS address of the Shared MySQL Database
    Value: !GetAtt Database.Endpoint.Address
    Export:
      Name: SharedMySQLDatabaseDNSAddress
