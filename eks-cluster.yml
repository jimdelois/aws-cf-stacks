AWSTemplateFormatVersion: '2010-09-09'
Description: "Manages Instance Profiles and Roles for Common ECS Usage"

Parameters:
  ClusterName:
    Description: "The name of the EKS Cluster"
    Type: "String"
  SshKeyPair:
    Description: "The KeyPair to use to SSH into Cluster Worker Nodes"
    Type: "String"
  NodeGroup1MinSize:
    Type: "String"
  NodeGroup1DesiredSize:
    Type: "String"
  NodeGroup1MaxSize:
    Type: "String"
  SubnetId1:
    Description: "Subnet ID 1 of 3"
    Type: "String"
  SubnetId2:
    Description: "Subnet ID 2 of 3"
    Type: "String"
  SubnetId3:
    Description: "Subnet ID 3 of 3"
    Type: "String"

Resources:

  ClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  Cluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Ref ClusterName
      ResourcesVpcConfig:
        SubnetIds:
          - !Ref SubnetId1
          - !Ref SubnetId2
          - !Ref SubnetId3
      RoleArn: !GetAtt ClusterRole.Arn

  NodeGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"

  NodeGroup1:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Ref Cluster
      NodeRole: !GetAtt NodeGroupRole.Arn
      RemoteAccess:
        Ec2SshKey: !Ref SshKeyPair
        SourceSecurityGroups:
          - !ImportValue PersonalSSHIngress
      ScalingConfig:
        MinSize: !Ref NodeGroup1MinSize
        DesiredSize: !Ref NodeGroup1DesiredSize
        MaxSize: !Ref NodeGroup1MaxSize
      Labels:
        StackId: !Sub "${AWS::StackName}"
      Subnets:
        - !Ref SubnetId1
        - !Ref SubnetId2
        - !Ref SubnetId3

Outputs:
  ClusterRoleArn:
    Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt ClusterRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ClusterRoleArn"
